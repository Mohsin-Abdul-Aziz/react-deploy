[{"C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\index.js":"1","C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\App.js":"2","C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\reportWebVitals.js":"3","C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\LandingPage.js":"4","C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\postspinner.js":"5"},{"size":500,"mtime":1608608541109,"results":"6","hashOfConfig":"7"},{"size":123,"mtime":1608608543695,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":6644,"mtime":1608609723684,"results":"10","hashOfConfig":"7"},{"size":377,"mtime":1608605668928,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1farqb7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\index.js",[],["24","25"],"C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\App.js",[],"C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\reportWebVitals.js",[],"C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\LandingPage.js",["26","27"],"import React from \"react\";\r\nimport { FaPlus ,FaSpinner} from \"react-icons/fa\";\r\nimport Spinner from './postspinner';\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    \r\n        this.fetchPosts = this.fetchPosts.bind(this);\r\n        this.state = {\r\n            loading: true,\r\n            users: [],\r\n            post:[],\r\n            showposticom:false,\r\n            personposts:[],\r\n            index:'',\r\n            posttitle:'',\r\n            personname:'',\r\n            postdisplay:false,\r\n            commentdispaly:false,\r\n            loadingpostindex:0,\r\n            specifiedPost:[],\r\n            comment:[],\r\n            loadbutton:false\r\n          };\r\n      }\r\n   \r\n  \r\n\r\n      async componentDidMount() {\r\n        const url = \"https://jsonplaceholder.typicode.com/users\";\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        var index;\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].name.includes('Mrs. ')) {\r\n                data[i].name = data[i].name.replace(/Mrs. /gi, '');\r\n            }\r\n            index = data[i].name.indexOf(' ');\r\n            data[i].name = data[i].name.substring(0, index)\r\n    \r\n        }\r\n        this.setState({\r\n            users: data,\r\n            loading: false\r\n        });\r\n    \r\n    }\r\n    async fetchPosts(userID) {\r\n        var firstname= this.state.users[userID-1].name;\r\n        this.setState({\r\n            showposticom:true\r\n        })\r\n        const url = \"https://jsonplaceholder.typicode.com/posts\";\r\n        const response = await fetch(url);\r\n        const posts = await response.json();\r\n        this.setState({ post: posts, loading: false, index:userID });\r\n        const userPost=[];\r\n        for (let i = 0; i < posts.length; i++) {\r\n            if(posts[i].userId == userID ){\r\n                userPost.push(posts[i])\r\n            }\r\n        }\r\n    \r\n        this.setState({ specifiedPost: userPost, loadbutton:true,\r\n             loadingpostindex:3, personname:firstname,\r\n              postdisplay:true ,commentdispaly:false,\r\n              showposticom:false},()=>{\r\n        })\r\n    }\r\n    loadingindex(){\r\n        this.setState({\r\n            loadingpostindex:this.state.specifiedPost.length,\r\n            loadbutton:false\r\n        })\r\n    }\r\n    async fetchComments(id, title) {\r\n        const url = \"https://jsonplaceholder.typicode.com/comments\";\r\n        const response = await fetch(url);\r\n        const comments = await response.json();\r\n        this.setState({\r\n            post: comments,\r\n            loading: false,\r\n            index: id\r\n        });\r\n        const postComments = [];\r\n        for (let i = 0; i < comments.length; i++) {\r\n            if (comments[i].postId == id) {\r\n                postComments.push(comments[i])\r\n            }\r\n        }\r\n    \r\n        this.setState({\r\n            comment: postComments,\r\n            commentdispaly: true,\r\n            posttitle: title\r\n        }, () => {\r\n            console.log(this.state.comment)\r\n        })\r\n    }\r\n\r\n  render() {\r\n    let loadall;  \r\n    let personName;\r\n    let displaypostcomment;\r\n    if(this.state.loadbutton){\r\n        loadall=(   \r\n        <div className=\"container\">\r\n            <br/>\r\n            <div className=\"row justify-content-end\">\r\n                <div className=\"col-3\">\r\n                <button className=\"btn btn-info\"  style={{borderRadius:\"0px\"}}  onClick={() => this.loadingindex()}>Load all</button>\r\n                </div>\r\n        </div>\r\n        </div>\r\n        )\r\n    }\r\n    if(this.state.commentdispaly){\r\n        displaypostcomment=(\r\n            <div class=\"container\">\r\n   <br/>\r\n   <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        Comments on <b>{this.state.personname}</b> <em>{this.state.posttitle}</em> post\r\n      </div>\r\n      <div class=\"card-body\">\r\n         <div class=\"row\">\r\n            <div class=\"col-md-12\" id=\"primary\">\r\n                {this.state.comment.map(person => (\r\n                <div key={person.id} style={{display: \"inline\"}}>\r\n                <p >{person.name}</p>\r\n                <p style={{borderBottom: \"1px solid grey\"}}>{person.body}</p>\r\n            <br/>\r\n        </div>\r\n        ))}\r\n            </div>\r\n         </div>\r\n      </div>\r\n      \r\n   </div>\r\n</div>\r\n        )\r\n    }\r\n    //Loading icon for users\r\n    if (this.state.loading) {\r\n      return <div style={{textAlign:\"center\", fontSize:\"40px\",}}>\r\n          Loading <FaSpinner/> \r\n          </div>;\r\n    }\r\n    //Loading icon for posts\r\n    if(this.state.showposticom){\r\n        return <div><Spinner/></div>;\r\n    }\r\n    //Setting the person name on display post condition\r\n    if(this.state.postdisplay){\r\n        personName=(\r\n           <div> Post from {this.state.personname}</div>\r\n        )\r\n\r\n    }\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n        {/* Displaying all the users from server */}\r\n        {this.state.users.map(user => (\r\n          <div key={user.id} style={{display: \"inline\", marginRight:\"2px\"}}>\r\n            <button className='btn btn-info' style={{borderRadius:\"0px\"}} onClick={() => this.fetchPosts(user.id)}>{user.name}</button>\r\n          </div>\r\n        ))}\r\n         </div>\r\n         \r\n         {/* Display the specific person first name if the user select that user */}\r\n        <div className=\"container\">\r\n            <br/>\r\n            <h5>{personName}</h5>\r\n        </div>\r\n\r\n        {/* Display posts here of that specific user with 3 post initially*/}\r\n        {this.state.specifiedPost.slice(0,this.state.loadingpostindex).map(post => (\r\n            <div key={post.id} style={{display: \"inline\"}}>\r\n            <br/> <br/>\r\n        <div className='container'>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-10\" style={{border: \"solid grey 1px\",  background:\"#007bffbd\"}}>\r\n                    <p style={{textAlign:\"center\"}}>{post.title}</p>\r\n                    <p>{post.body}</p>\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                <i className=\"fas fa-plus\"></i>\r\n                <p onClick={() => this.fetchComments(post.id,post.title)} style={{color:\"#007bffbd\",fontSize:\"45px\", cursor: \"pointer\"}}><FaPlus/></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        ))}\r\n        \r\n        {/* Display all of the posts here of that specific user if the load all button is clicked*/}\r\n        {loadall}\r\n\r\n        {/* Displaying post comments here*/}\r\n        {displaypostcomment}\r\n            \r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;","C:\\Users\\mohsi_d8uvjbb\\OneDrive\\Documents\\digitaltask\\React Task\\src\\postspinner.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":61,"column":32,"nodeType":"34","messageId":"35","endLine":61,"endColumn":34},{"ruleId":"32","severity":1,"message":"33","line":89,"column":36,"nodeType":"34","messageId":"35","endLine":89,"endColumn":38},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]